{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/dialog/dialog.component.css","webpack:///./src/app/components/dialog/dialog.component.html","webpack:///./src/app/components/dialog/dialog.component.ts","webpack:///./src/app/components/view/view.component.css","webpack:///./src/app/components/view/view.component.html","webpack:///./src/app/components/view/view.component.ts","webpack:///./src/app/shared/models/Car.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,+DAA+D,+H;;;;;;;;;;;ACA/D,wC;;;;;;;;;;;;;;;;;;;;;;;;ACA6D;AAQ7D;IAGE;IAAc,CAAC;IAHJ,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;;OACW,YAAY,CAMxB;IAAD,mBAAC;CAAA;AANwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRiC;AACjB;AACwB;AAET;AACf;AACoC;AAC6E;AACpF;AACb;AACoB;AAEZ;AACZ;AAyBrD;IAAA;IAAyB,CAAC;IAAb,SAAS;QAtBrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,mEAAY;gBACZ,0FAAe;gBACf,8EAAa;aACd;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,qEAAgB,EAAE,wDAAU;gBAC5B,kEAAmB,EAAC,0DAAW;gBAC/B,iEAAe;gBACf,iEAAe;gBACf,oEAAkB;gBAClB,gEAAc;gBACd,iEAAe;gBACf,4FAAuB,EAAC,iEAAe,EAAC,gEAAc,EAAC,iEAAe,EAAC,sEAAc,EAAC,qFAAqB;aAC5G;YACD,OAAO,EAAC,CAAC,sEAAc,CAAC;YACtB,eAAe,EAAE,CAAC,0FAAe,CAAC;YACpC,SAAS,EAAE,CAAC,qEAAgB,CAAC;YAC7B,SAAS,EAAE,CAAC,mEAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;ACtCtB,wCAAwC,sBAAsB,+BAA+B,uBAAuB,SAAS,mCAAmC,qBAAqB,eAAe,+CAA+C,+jB;;;;;;;;;;;ACAnP,k8F;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA0D;AAEV;AACkB;AAQlE;IAEE,yBACS,SAAoD,EAC3B,GAAQ;QADjC,cAAS,GAAT,SAAS,CAA2C;QAC3B,QAAG,GAAH,GAAG,CAAK;IAAG,CAAC;IAE9C,mCAAS,GAAT;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IARU,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;;;SAGvB,CAAC;QAKG,uEAAM,CAAC,iEAAe,CAAC;yCADN,8DAAY;YACO,6DAAG;OAJ/B,eAAe,CAU3B;IAAD,sBAAC;CAAA;AAV2B;AAY5B;IAAA;IAIA,CAAC;IAAD,kCAAC;AAAD,CAAC;;;;;;;;;;;;;AC3BD,sCAAsC,sBAAsB,+BAA+B,oBAAoB,mBAAmB,OAAO,6BAA6B,sBAAsB,+BAA+B,oBAAoB,mBAAmB,OAAO,kCAAkC,mBAAmB,OAAO,iBAAiB,mBAAmB,qBAAqB,OAAO,+CAA+C,m7B;;;;;;;;;;;ACApb,umBAAumB,cAAc,gNAAgN,cAAc,oNAAoN,eAAe,oNAAoN,eAAe,uMAAuM,oBAAoB,kNAAkN,0BAA0B,wMAAwM,qBAAqB,wNAAwN,yBAAyB,4MAA4M,uBAAuB,8MAA8M,wBAAwB,gJAAgJ,2BAA2B,2B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAruF;AAGgB;AAC3B;AAEJ;AAS9C;IAUE,uBAAoB,IAAgB,EAAQ,MAAiB;QAAzC,SAAI,GAAJ,IAAI,CAAY;QAAQ,WAAM,GAAN,MAAM,CAAW;QAR7D,qBAAgB,GAAa,CAAC,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAC,YAAY;YAC7C,kBAAkB,EAAC,aAAa,EAAC,iBAAiB,EAAC,eAAe;YAClE,gBAAgB,CAAC,CAAC;IAMe,CAAC;IAEhE,gCAAQ,GAAR;QAAA,iBAMC;QALC,IAAI,CAAC,OAAO,EAAE,CAAC,SAAS,CAAC,cAAI;YAC3B,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YACjB,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,IAAI,CAAC,CAAC;QACxB,CAAC,CAAC,CAAC;IAEN,CAAC;IACM,+BAAO,GAAd;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;IAChD,CAAC;IAED,kCAAU,GAAV;QAAA,iBAkBC;QAjBC,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,0FAAe,EAAE;YAClD,KAAK,EAAE,OAAO;YACd,MAAM,EAAE,OAAO;YACf,IAAI,EAAE,EAAE;SACT,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,gBAAM;YACtC,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;YACrC,KAAI,CAAC,GAAG,GAAG,MAAM,CAAC;YAClB,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,GAAG,CAAC,CAAC;YAEtB,KAAI,CAAC,gBAAgB,GAAE,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;YACxC,KAAK,IAAI,MAAM,IAAI,MAAM,CAAC,IAAI,CAAC,KAAI,CAAC,GAAG,CAAC,EAAE;gBACxC,KAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAI,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;aAC5D;QAEF,CAAC,CAAC,CAAC;IACL,CAAC;IAzCU,aAAa;QALzB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;yCAW0B,+DAAU,EAAgB,2DAAS;OAVlD,aAAa,CA2CzB;IAAD,oBAAC;CAAA;AA3CyB;;;;;;;;;;;;;ACf1B;AAAA;AAAA,qCAAqC;AACrC;IAAA;IAWE,CAAC;IAAD,UAAC;AAAD,CAAC;;;;;;;;;;;;;;ACZH;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-view></app-view>\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\n\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n \r\n \r\n  constructor(){}\r\n  \r\n  \r\n}\r\n\r\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {ReactiveFormsModule,FormsModule } from '@angular/forms' ;\n\nimport { HttpClientModule } from '@angular/common/http';\nimport {HttpModule} from '@angular/http';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {MatButtonModule, MatFormFieldModule, MatInputModule, MatRippleModule, MatSelectModule, MatTableModule, MatDialogModule } from '@angular/material';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { DialogComponent } from 'src/app/components/dialog/dialog.component';\n\nimport { ViewComponent } from './components/view/view.component';\nimport { AppComponent } from 'src/app/app.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DialogComponent,\n    ViewComponent\n  ],\n  imports: [\n    BrowserModule, \n    HttpClientModule, HttpModule,\n    ReactiveFormsModule,FormsModule,\n    MatButtonModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatRippleModule,\n    BrowserAnimationsModule,MatSelectModule,MatTableModule,MatDialogModule,MatRadioModule,MatButtonToggleModule\n  ],\n  exports:[MatRadioModule],\n    entryComponents: [DialogComponent],\n  providers: [HttpClientModule],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }","module.exports = \".example-radio-group {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    /*margin: 15px;*/\\r\\n  }\\r\\n  \\r\\n  .example-radio-button {\\r\\n    margin: 15px;\\r\\n    \\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9kaWFsb2cvZGlhbG9nLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxjQUFjO0lBQ2QsdUJBQXVCO0lBQ3ZCLGlCQUFpQjtHQUNsQjs7RUFFRDtJQUNFLGFBQWE7O0dBRWQiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2RpYWxvZy9kaWFsb2cuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5leGFtcGxlLXJhZGlvLWdyb3VwIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgLyptYXJnaW46IDE1cHg7Ki9cclxuICB9XHJcbiAgXHJcbiAgLmV4YW1wbGUtcmFkaW8tYnV0dG9uIHtcclxuICAgIG1hcmdpbjogMTVweDtcclxuICAgIFxyXG4gIH0iXX0= */\"","module.exports = \"<h1 mat-dialog-title>Car Options:</h1>\\n<div mat-dialog-content>\\n  <mat-form-field>\\n    <mat-select placeholder=\\\"Select color\\\" [(value)]=\\\"car.color\\\">\\n      <mat-option value=\\\"Red\\\">Red</mat-option>\\n      <mat-option value=\\\"White\\\">White</mat-option>\\n      <mat-option value=\\\"Gray\\\">Gray</mat-option>\\n      <mat-option value=\\\"Silver\\\">Silver</mat-option>\\n      <mat-option value=\\\"Black\\\">Black</mat-option>\\n    </mat-select>\\n  </mat-form-field>\\n   <br/>\\n   <label id=\\\"example-radio-group-label\\\">Sun proof</label>\\n  <mat-radio-group aria-label=\\\"Select an option\\\"  aria-labelledby=\\\"example-radio-group-label\\\"\\n  class=\\\"example-radio-group\\\" [(ngModel)]=\\\"car.hasSunroof\\\">\\n    <mat-radio-button value=\\\"true\\\">True</mat-radio-button>\\n    <mat-radio-button value=\\\"false\\\">False</mat-radio-button>\\n  </mat-radio-group>\\n\\n  <br/>\\n   <label id=\\\"example-radio-group-label\\\">4 wheel drive</label>\\n  <mat-radio-group aria-label=\\\"Select an option\\\"  aria-labelledby=\\\"example-radio-group-label\\\"\\n  class=\\\"example-radio-group\\\" [(ngModel)]=\\\"car.isFourWheelDrive\\\">\\n    <mat-radio-button value=\\\"true\\\">True</mat-radio-button>\\n    <mat-radio-button value=\\\"false\\\">False</mat-radio-button>\\n  </mat-radio-group>\\n  <br/>\\n   <label id=\\\"example-radio-group-label\\\">Low miles</label>\\n  <mat-radio-group aria-label=\\\"Select an option\\\"  aria-labelledby=\\\"example-radio-group-label\\\"\\n  class=\\\"example-radio-group\\\" [(ngModel)]=\\\"car.hasLowMiles\\\">\\n    <mat-radio-button value=\\\"true\\\">True</mat-radio-button>\\n    <mat-radio-button value=\\\"false\\\">False</mat-radio-button>\\n  </mat-radio-group>\\n  <br/>\\n   <label id=\\\"example-radio-group-label\\\">Power windows</label>\\n  <mat-radio-group aria-label=\\\"Select an option\\\"  aria-labelledby=\\\"example-radio-group-label\\\"\\n  class=\\\"example-radio-group\\\" [(ngModel)]=\\\"car.hasPowerWindows\\\">\\n    <mat-radio-button value=\\\"true\\\">True</mat-radio-button>\\n    <mat-radio-button value=\\\"false\\\">False</mat-radio-button>\\n  </mat-radio-group>\\n  <br/>\\n   <label id=\\\"example-radio-group-label\\\">Navigation</label>\\n  <mat-radio-group aria-label=\\\"Select an option\\\"  aria-labelledby=\\\"example-radio-group-label\\\"\\n  class=\\\"example-radio-group\\\" [(ngModel)]=\\\"car.hasNavigation\\\">\\n    <mat-radio-button value=\\\"true\\\">True</mat-radio-button>\\n    <mat-radio-button value=\\\"false\\\">False</mat-radio-button>\\n  </mat-radio-group>\\n  <br/>\\n   <label id=\\\"example-radio-group-label\\\">Heated seats</label>\\n  <mat-radio-group aria-label=\\\"Select an option\\\"  aria-labelledby=\\\"example-radio-group-label\\\"\\n  class=\\\"example-radio-group\\\" [(ngModel)]=\\\"car.hasHeatedSeats\\\">\\n    <mat-radio-button value=\\\"true\\\">True</mat-radio-button>\\n    <mat-radio-button value=\\\"false\\\">False</mat-radio-button>\\n  </mat-radio-group>\\n  \\n\\n  \\n</div>\\n<div mat-dialog-actions>\\n  <button mat-button (click)=\\\"onNoClick()\\\">cancel</button>\\n  <button mat-button [mat-dialog-close]=\\\"car\\\" cdkFocusInitial >filter</button>\\n</div>\\n\"","import { Component, OnInit, Inject } from '@angular/core';\n\nimport { Car } from 'src/app/shared/models/Car';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\n\n@Component({\n  selector: 'app-dialog',\n  templateUrl: './dialog.component.html',\n  styleUrls: ['./dialog.component.css']\n})\nexport class DialogComponent {\n\n  constructor(\n    public dialogRef: MatDialogRef<DialogOverviewExampleDialog>,\n    @Inject(MAT_DIALOG_DATA) public car: Car) {}\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n}\n\nexport class DialogOverviewExampleDialog {\n\n  \n\n}","module.exports = \".example-container {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    margin:50px;\\r\\n    width: 10%;\\r\\n  }\\r\\n\\r\\n  .header-container {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    margin:50px;\\r\\n    width: 30%;\\r\\n  }\\r\\n\\r\\n  .example-container > * {\\r\\n    width: 80%;\\r\\n  }\\r\\n\\r\\n  table {\\r\\n    width: 80%;\\r\\n    margin :50px;\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy92aWV3L3ZpZXcuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGNBQWM7SUFDZCx1QkFBdUI7SUFDdkIsWUFBWTtJQUNaLFdBQVc7R0FDWjs7RUFFRDtJQUNFLGNBQWM7SUFDZCx1QkFBdUI7SUFDdkIsWUFBWTtJQUNaLFdBQVc7R0FDWjs7RUFFRDtJQUNFLFdBQVc7R0FDWjs7RUFFRDtJQUNFLFdBQVc7SUFDWCxhQUFhO0dBQ2QiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL3ZpZXcvdmlldy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmV4YW1wbGUtY29udGFpbmVyIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgbWFyZ2luOjUwcHg7XHJcbiAgICB3aWR0aDogMTAlO1xyXG4gIH1cclxuXHJcbiAgLmhlYWRlci1jb250YWluZXIge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICBtYXJnaW46NTBweDtcclxuICAgIHdpZHRoOiAzMCU7XHJcbiAgfVxyXG4gIFxyXG4gIC5leGFtcGxlLWNvbnRhaW5lciA+ICoge1xyXG4gICAgd2lkdGg6IDgwJTtcclxuICB9XHJcblxyXG4gIHRhYmxlIHtcclxuICAgIHdpZHRoOiA4MCU7XHJcbiAgICBtYXJnaW4gOjUwcHg7XHJcbiAgfSJdfQ== */\"","module.exports = \"<h4 class=\\\"header-container\\\">Car Dealership</h4>\\n<div class=\\\"example-container\\\">\\n  \\n  <button mat-raised-button (click)=\\\"openDialog()\\\">Apply filters</button>\\n  </div>\\n  \\n  \\n\\n  <table mat-table [dataSource]=\\\"cars\\\" class=\\\"mat-elevation-z8\\\" >\\n\\n    <!--- Note that these columns can be defined in any order.\\n          The actual rendered columns are set as a property on the row definition\\\" -->\\n  \\n    <!-- Position Column -->\\n    <ng-container matColumnDef=\\\"make\\\">\\n      <th mat-header-cell *matHeaderCellDef> Make </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.make}} </td>\\n    </ng-container>\\n  \\n    <!-- Name Column -->\\n    <ng-container matColumnDef=\\\"year\\\">\\n      <th mat-header-cell *matHeaderCellDef> Year </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.year}} </td>\\n    </ng-container>\\n  \\n    <!-- Weight Column -->\\n    <ng-container matColumnDef=\\\"color\\\">\\n      <th mat-header-cell *matHeaderCellDef> Color </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.color}} </td>\\n    </ng-container>\\n  \\n    <!-- Symbol Column -->\\n    <ng-container matColumnDef=\\\"price\\\">\\n      <th mat-header-cell *matHeaderCellDef> Price </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.price}} </td>\\n    </ng-container>\\n   \\n    <ng-container matColumnDef=\\\"hasSunroof\\\">\\n        <th mat-header-cell *matHeaderCellDef> HasSunroof </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.hasSunroof}} </td>\\n      </ng-container>\\n      <ng-container matColumnDef=\\\"isFourWheelDrive\\\">\\n        <th mat-header-cell *matHeaderCellDef> IsFourWheelDrive </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.isFourWheelDrive}} </td>\\n      </ng-container>\\n      <ng-container matColumnDef=\\\"hasLowMiles\\\">\\n        <th mat-header-cell *matHeaderCellDef> HasLowMiles </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.hasLowMiles}} </td>\\n      </ng-container>\\n      \\n      <ng-container matColumnDef=\\\"hasPowerWindows\\\">\\n        <th mat-header-cell *matHeaderCellDef> HasPowerWindows </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.hasPowerWindows}} </td>\\n      </ng-container>\\n      <ng-container matColumnDef=\\\"hasNavigation\\\">\\n        <th mat-header-cell *matHeaderCellDef> HasNavigation </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.hasNavigation}} </td>\\n      </ng-container>\\n      <ng-container matColumnDef=\\\"hasHeatedSeats\\\">\\n        <th mat-header-cell *matHeaderCellDef> HasHeatedSeats </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.hasHeatedSeats}} </td>\\n      </ng-container>\\n      \\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n  </table>\\n  \\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\n\nimport { Car } from 'src/app/shared/models/Car';\nimport { DialogComponent } from 'src/app/components/dialog/dialog.component';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { MatDialog } from '@angular/material';\n\n\n\n@Component({\n  selector: 'app-view',\n  templateUrl: './view.component.html',\n  styleUrls: ['./view.component.css']\n})\nexport class ViewComponent implements OnInit{\n \n  displayedColumns: string[] = ['make', 'year', 'color', 'price','hasSunroof',\n                                'isFourWheelDrive','hasLowMiles','hasPowerWindows','hasNavigation',\n                                'hasHeatedSeats'];\n  \n  cars : Car[];\n  car:Car;\n \n \n  constructor(private http: HttpClient,public dialog: MatDialog){}\n  \n  ngOnInit(): void {\n    this.getJSON().subscribe(data => {\n      this.cars = data;\n      console.log(this.cars);\n     });\n    \n  }\n  public getJSON(): Observable<any> {\n    return this.http.get('assets/cars-data.json');\n  }\n\n  openDialog(): void {\n    const dialogRef = this.dialog.open(DialogComponent, {\n      width: '500px',\n      height: '800px',\n      data: {}\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('The dialog was closed');\n      this.car = result;\n      console.log(this.car);\n     \n      this.displayedColumns= ['make', 'year'];\n      for (let column in Object.keys(this.car)) {\n        this.displayedColumns.push(Object.keys(this.car)[column]);\n     }\n     \n    });\n  }\n\n}\n\n","// TODO: Create car model for project\nexport class Car {    \n    make: string;\n    year: number;\n    color: string;\n    price: number;\n    hasSunroof: boolean;\n    isFourWheelDrive: boolean;\n    hasLowMiles: boolean;\n    hasPowerWindows: boolean;\n    hasNavigation: boolean;\n    hasHeatedSeats: boolean;\n  }","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}